sqlite3 *open_db(const char *dbname) {
    sqlite3 *db;
    int rc = sqlite3_open(dbname, &db);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "Error while openin database: %s\n",
                sqlite3_errmsg(db));
        sqlite3_close(db);
        return NULL;
    }
    return db;
}

int create_table(sqlite3 *db, const char *tableName, const char *createSQL) {
    char *err_msg = 0;
    char *sql = sqlite3_mprintf("CREATE TABLE IF NOT EXISTS %s (%s);",
                                tableName, createSQL);
    int rc = sqlite3_exec(db, sql, 0, 0, &err_msg);
    sqlite3_free(sql);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "Error while creating table: %s\n", err_msg);
        sqlite3_free(err_msg);
        sqlite3_close(db);
        return 1;
    }
    return 0;
}

int insert_data(sqlite3 *db, const char *tableName, const char *insertSQL) {
    char *err_msg = 0;
    char *sql =
        sqlite3_mprintf("INSERT INTO %s VALUES %s;", tableName, insertSQL);
    int rc = sqlite3_exec(db, sql, 0, 0, &err_msg);
    sqlite3_free(sql);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "Error while inserting into database: %s\n", err_msg);
        sqlite3_free(err_msg);
        sqlite3_close(db);
        return 1;
    }
    return 0;
}

int callback(void *, int, char **, char **);

void get_data(sqlite3 *db, List *list, char *table_name) {
    char *err_msg = 0;
    char *sql = sqlite3_mprintf("SELECT * FROM %s ;", table_name);
    int rc = sqlite3_exec(db, sql, callback, list, &err_msg);
    sqlite3_free(sql);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "Error while inserting into database: %s\n", err_msg);
        sqlite3_free(err_msg);
        sqlite3_close(db);
        exit(-1);
    }
}